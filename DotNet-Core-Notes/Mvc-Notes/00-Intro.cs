what Is DNS
Domain Name System :
DNS (نظام أسماء النطاقات) هو نظام يترجم أسماء النطاقات مثل google.com إلى عناوين IP يفهمها الكمبيوتر، مما يسمح للأجهزة بالاتصال ببعضها على الإنترنت.

كيف يعمل؟
يرسل المتصفح طلبًا لتحويل النطاق إلى عنوان IP.
يتحقق خادم DNS المحلي من ذاكرته، وإذا لم يجد العنوان، يستعلم من خوادم أخرى.
خوادم الجذر توجه الطلب إلى الخوادم المسؤولة عن النطاق المطلوب.
يتم العثور على عنوان IP وإعادته للمتصفح، الذي يستخدمه للوصول إلى الموقع.
🔹 DNS يسرّع تصفح الإنترنت ويضمن الوصول إلى المواقع بسهولة! 🚀

//=========================================================================
Hosting Types :
أنواع الاستضافة (Hosting Types)
1. الاستضافة المشتركة (Shared Hosting)
🔹 يتم استضافة عدة مواقع على نفس الخادم.
🔹 مزايا: رخيصة وسهلة الاستخدام.
🔹 عيوب: أداء أقل، مشاركة الموارد مع مواقع أخرى.

2. الاستضافة الافتراضية (VPS - Virtual Private Server)
🔹 خادم واحد مقسم إلى عدة خوادم افتراضية مستقلة.
🔹 مزايا: أداء أفضل من الاستضافة المشتركة، مرونة أعلى.
🔹 عيوب: أغلى سعرًا، يتطلب معرفة تقنية أكبر.

3. الاستضافة المخصصة (Dedicated Hosting)
🔹 خادم كامل مخصص لموقع واحد.
🔹 مزايا: أداء عالٍ، تحكم كامل.
🔹 عيوب: تكلفة مرتفعة، يحتاج خبرة تقنية.

4. الاستضافة السحابية (Cloud Hosting)
🔹 يتم استضافة الموقع عبر عدة خوادم متصلة بالإنترنت.
🔹 مزايا: موثوقية، قابلية للتوسع، أداء مستقر.
🔹 عيوب: قد تكون التكلفة غير متوقعة حسب الاستخدام.

5. الاستضافة بدون خادم (Serverless Hosting)
🔹 يتم استضافة التطبيق دون الحاجة إلى إدارة خادم فعلي.
🔹 مزايا: مرونة، يدفع المستخدم فقط مقابل الموارد المستهلكة.
🔹 عيوب: ليس مناسبًا لكل أنواع التطبيقات.

🔹 الخيار الأفضل يعتمد على احتياجات موقعك، حجم البيانات، والأداء المطلوب! 🚀

//=========================================================================
Web Request Revision
مراجعة طلبات الويب (Web Request Revision)
1. ما هو طلب الويب؟
طلب الويب هو عملية إرسال واستقبال البيانات بين العميل (مثل المتصفح) والخادم عبر بروتوكول HTTP/HTTPS.

2. مكونات طلب الويب
🔹 URL (عنوان الرابط): يحدد المورد المطلوب.
🔹 Method (طريقة الطلب): مثل GET, POST, PUT, DELETE.
🔹 Headers (الرؤوس): تحمل معلومات مثل نوع المحتوى والمصادقة.
🔹 Body (جسم الطلب): يحتوي على البيانات المرسلة في طلبات POST و PUT.

3. خطوات معالجة الطلب
يرسل العميل (المتصفح) الطلب إلى الخادم.
يفحص الخادم الطلب ويعالج البيانات المطلوبة.
يرسل الخادم استجابة تحتوي على البيانات المطلوبة أو رمز حالة (Status Code).
يعرض المتصفح النتيجة أو يعيد إرسال الطلب حسب الحاجة.
4. أكواد استجابة HTTP الشائعة
✅ 200 OK - نجاح الطلب.
🚫 404 Not Found - المورد غير موجود.
⛔ 403 Forbidden - الوصول ممنوع.
🔄 301 Moved Permanently - إعادة توجيه دائم.
⚠️ 500 Internal Server Error - خطأ في الخادم.

🔹 فهم طلبات الويب يساعد في تحسين الأداء، الأمان، وحل المشاكل التقنية! 🚀

//=========================================================================
What Is MVC 
MVC (Model-View-Controller) :
ما هو MVC؟
MVC (Model-View-Controller) هو نمط تصميم برمجي يُستخدم لتنظيم الكود في تطبيقات الويب والتطبيقات الأخرى بطريقة تسهل الصيانة والتطوير.

مكونات MVC
Model (النموذج) 🏛️

يمثل البيانات والمنطق الخاص بالتطبيق.
يتعامل مع قواعد البيانات والاستعلامات.
View (العرض) 🖥️

مسؤول عن عرض البيانات للمستخدم.
يشمل واجهات المستخدم (HTML, CSS, JavaScript).
Controller (المتحكم) 🎮

يتلقى الطلبات من المستخدم، يعالجها، ويتواصل مع الـ Model والـ View.
يحدد ما يجب عرضه للمستخدم بناءً على البيانات.
كيف يعمل MVC؟
المستخدم يرسل طلب (مثلاً يفتح صفحة).
Controller يستقبل الطلب ويتواصل مع Model لاسترجاع البيانات.
Model يعيد البيانات إلى Controller.
Controller يرسل البيانات إلى View ليتم عرضها للمستخدم.
لماذا نستخدم MVC؟
✅ تنظيم الكود - يسهل الصيانة والتطوير.
✅ فصل المهام - يجعل التعديلات أكثر مرونة.
✅ إعادة الاستخدام - يمكن استخدام نفس البيانات في عدة واجهات.

🔹 يُستخدم MVC في ASP.NET Core و Laravel و Django وغيرها من أطر العمل الشهيرة! 🚀

//=========================================================================
//=========================================================================
//=========================================================================
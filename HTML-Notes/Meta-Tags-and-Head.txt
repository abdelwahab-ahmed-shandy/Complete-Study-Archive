Brief Description:
This file contains a detailed explanation of Meta Tags and header sections in HTML.
It includes examples of improving performance, improving security, enhancing user experience, supporting Progressive Applications (PWA), and defining external links such as Bootstrap libraries and Google Fonts.
It is suitable for developers interested in improving SEO and security performance.

============
Meta Tags:
============
<!-- Encoding -->
<meta charset="UTF-8">

<!-- Mobile Compatibility -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

To protect applications from CSRF (Cross-Site Request Forgery) attacks
<meta name="csrf-token" content="{{ csrf_token }}">

<!-- Page Description to Improve -->
<meta name="keywords" content="Backend, Laravel, PHP, MySQL">
<meta name="author" content="Abdelwahab Shandy">
<link rel="canonical" href="{{ url()->current() }}"> <!-- To avoid duplicate content -->

<!-- Indexing Settings -->
<meta name="robots" content="index, follow">

<!-- Set default language -->
<meta name="lang" content="{{ app()->getLocale() }}">

================================================================================================================

Links to Stylesheets:
=========================
- Linking internal and external CSS files:
=================================
<!-- External CSS file -->
<link rel="stylesheet" href="/css/main.css">

<!-- External library -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">

You often need to link JavaScript files or libraries like jQuery that handle backend requests:

<!-- Project JavaScript file -->
<script src="/js/main.js" defer></script>

<!-- jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
const baseUrl = "{{ url('/') }}"; // Server URL to bind backend requests
</script>

============================================================================================================
=======
Title And Icon :
=======
<title>Page Title</title>

Add the icon that appears next to the page title :
<link rel="icon" href="favicon.ico" type="image/x-icon">
==============================================================================================================
Links to download external fonts or libraries such as Google Fonts or Bootstrap Library:
<!-- Download Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">

<!-- Bootstrap Library -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"> <!-- Bootstrap Library -->

==============================================================================================================

Used to improve link sharing on social media:

<meta property="og:title" content="Page Title">
<meta property="og:description" content="Page Description">
<meta property="og:image" content="/images/share.png">
<meta property="og:url" content="{{ url()->current() }}">

==============================================================================================================
When the project needs to pass dynamic data from back-end to front-end:

<script>
const apiUrl = "{{ route('api.endpoint') }}"; // API binding
const isAuthenticated = "{{ Auth::check() }}"; // Login verification
</script>

==============================================================================================================
Helps speed up resource loading by requesting them in advance:
=================
<link rel="preload" href="/fonts/custom-font.woff2" as="font" type="font/woff2" crossorigin="anonymous">
<link rel="preload" href="/css/main.css" as="style">
<link rel="preload" href="/js/main.js" as="script">

==============================================================================================================
Manifest & PWA Support:
If you are using an app that supports Progressive Web Apps:

<link rel="manifest" href="/manifest.json">
<meta name="theme-color" content="#ffffff">

==============================================================================================================
Performance and Analytics
Used to improve performance and track user behavior:

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-XXXXXX-Y"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-XXXXX-Y'); // Google Analytics ID
</script>

==============================================================================================================
Error Monitoring
When using services like Sentry to monitor errors:

<script src="https://browser.sentry-cdn.com/6.13.3/bundle.min.js" crossorigin="anonymous"></script>
<script>
Sentry.init({ dsn: 'https://your-sentry-dsn' });
</script>

==============================================================================================================
Security Headers :
===================

Security settings such as Content Security Policy:
<meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' https://trusted-scripts.com;">

Strict-Transport-Security (HSTS)
Force browsers to use HTTPS only, protecting against Man-In-The-Middle attacks:
<meta http-equiv="Strict-Transport-Security" content="max-age=31536000; includeSubDomains; preload">

Prevents the browser from guessing the type of content (MIME Sniffing), protecting against some types of attacks.
<meta http-equiv="X-Content-Type-Options" content="nosniff">

X-Frame-Options
Protects against Clickjacking attacks by preventing your page from loading inside an iframe:

<meta http-equiv="X-Frame-Options" content="SAMEORIGIN">

Referrer-Policy
To control the amount of referrer information sent with requests:

<meta name="referrer" content="no-referrer">

Permissions-Policy (formerly Feature-Policy)
geolocation=(self): Allow location use only for the current resource.
camera=(): Permanently block camera access
To control browser permissions (such as camera, microphone, location, etc.) and prevent their misuse:
<meta http-equiv="Permissions-Policy" content="geolocation=(self), camera=()">

X-XSS-Protection
Protects against some types of Cross-Site Scripting (XSS) attacks by enabling the browser's XSS protection feature:
1: Enable the protection feature.
mode=block: Prevent the page from being displayed if XSS is detected
<meta http-equiv="X-XSS-Protection" content="1; mode=block">

Cache-Control
To control data caching by the browser or proxy servers:
no-store: Permanently block caching.
no-cache: Request to confirm that the data is up to date from the server.
max-age=0: Cache expires immediately.
<meta http-equiv="Cache-Control" content="no-store, no-cache, must-revalidate, max-age=0">

Cross-Origin-Embedder-Policy (COEP)
Protects against some types of threats associated with cross-domain content embedding:
require-corp: Only allow resources that come from the same domain or are authorized

<meta http-equiv="Cross-Origin-Embedder-Policy" content="require-corp">

Cross-Origin-Opener-Policy (COOP)
Promotes isolation between documents to protect data from attacks such as Spectre:

same-origin: Only allow interaction between documents from the same domain

<meta http-equiv="Cross-Origin-Opener-Policy" content="same-origin">

Cross-Origin-Resource-Policy (CORP)
To control resources that Can be used across domains:

same-origin: Allow only resources from the same domain.

cross-origin: Allow access from all domains.

<meta http-equiv="Cross-Origin-Resource-Policy" content="same-origin">

Expect-CT
To ensure compliance with the Certificate Transparency policy:
max-age: Specifies the retention period.
enforce: Enforce the policy

<meta http-equiv="Expect-CT" content="max-age=86400, enforce">

Set-Cookie
To secure cookies by adding attributes such as HttpOnly and Secure. This is done in the responses from the server:
Set-Cookie: session_id=abc123; HttpOnly; Secure; SameSite=Strict

==============================================================================================================


